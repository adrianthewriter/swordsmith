.table {
  border: var(--border-strong);
}

.tableheader {
  display: flex;
  height: var(--base-size);
  align-items: flex-end;
  border-bottom: var(--border-primary);

  & span {
    display: flex;
    align-items: center;
    flex: 1;
    height: var(--base-size);
    padding: 0 6px;
    padding-top: 3px;
    font-family: var(--font-heading);
    text-align: left;

    &:first-child {
      font-weight: bold;
    }
  }

  & .roll {
    flex: none;
    width: var(--base-size);
    padding: 3px 0;
    justify-content: center;

    &::after {
      content: 'L';
      font-family: 'dicefontd6';
      font-size: 12px;
    }
  }

  & .view {
    flex: none;
    width: var(--base-size);
    justify-content: center;

    &::after {
      content: 'E';
      font: 12px 'Pictos';
      font-weight: normal;
    }
  }
}

.tablerow {
  display: flex;
  flex-flow: row wrap;
  min-height: var(--base-size);
  align-items: flex-end;
  border-bottom: var(--border-primary);

  &:last-child {
    border-bottom: 0;
  }

  & > input[type='text'].field {
    flex: 1;
    width: 0;
    padding: 0 6px;
  }

  & > * + input[type='text'].field {
    border-right: var(--border-primary);
  }

  & > .drawer {
    border-top: var(--border-secondary);

    & .field {
      padding-left: 6px;
    }
  }
}

/* Roll20 Generated Content */
/* Repeating Fields */

.repcontainer.editmode .repitem:hover .itemcontrol {
  background-color: var(--field-hover-color) !important;
}

.repitem .tablerow {
  border-bottom: var(--border-primary);
}

.repitem:last-child .tablerow {
  /* border-bottom: var(--border-primary); */
}

.itemcontrol {
  z-index: 100;
}

.itemcontrol .btn {
  display: flex;
  align-items: center;
  width: fit-content;
  height: var(--base-size);

  &.repcontrol_move {
    transform: translate(-35px);
  }

  &.repcontrol_del {
    transform: translate(35px);
  }
}

.repcontrol {
  overflow: hidden;
  display: flex;
  flex-flow: row-reverse nowrap;
  justify-content: space-between;

  & .btn {
    all: unset;
    padding: 3px 6px;
    cursor: pointer;
  }

  & .repcontrol_add {
    &::after {
      content: ' row';
    }
  }
}
